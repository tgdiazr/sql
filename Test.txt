
This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000

SELECT COUNT(distinct id)
FROM business

ii. Hours = 1562

SELECT COUNT(distinct business_id)
FROM hours

iii. Category = 2643

SELECT COUNT(distinct business_id)
FROM category

iv. Attribute =  1115 

SELECT COUNT(distinct business_id)
FROM attribute to ensure your formatting remains intact for you reviewer.

i. Attribute table = 10000

SELECT COUNT(*)
FROM attribute

ii. Business table = 10000

SELECT COUNT(*)
FROM business

iii. Category table = 10000

SELECT COUNT(*)
FROM Category

iv. Checkin table =

SELECT COUNT(*)
FROM Checkin

v. elite_years table = 10000

SELECT COUNT(*)
FROM elite_years

vi. friend table = 10000

SELECT COUNT(*)
FROM friend

vii. hours table = 10000

SELECT COUNT(*)
FROM hours

viii. photo table = 10000

SELECT COUNT(*)
FROM photo

ix. review table = 10000

SELECT COUNT(*)
FROM review

x. tip table = 10000

SELECT COUNT(*)
FROM tip

xi. user table = 10000

SELECT COUNT(*)
FROM user

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000

SELECT COUNT(distinct id)
FROM business

ii. Hours = 1562

SELECT COUNT(distinct business_id)
FROM hours

iii. Category = 2643

SELECT COUNT(distinct business_id)
FROM category

iv. Attribute =  1115 

SELECT COUNT(distinct business_id)
FROM attribute

v. Review(id) = 10000, Review(business_id)=8090, Review(user_id)= 9581

*id
SELECT COUNT(distinct id)
FROM review

*bussiness_id
SELECT COUNT(distinct business_id)
FROM review

*user_id
SELECT COUNT(distinct user_id)
FROM review

vi. Checkin = 493

SELECT COUNT(distinct business_id)
FROM checkin

vii. Photo(id)= 10000, Photo(business_id)= 6493

*id=
SELECT COUNT(distinct id)
FROM photo
business_id= 
SELECT COUNT(distinct business_id)
FROM photo

viii. Tip(id) = 537, Tip(business_id)= 3979

*Tip(id)=
SELECT COUNT(distinct user_id)
FROM tip

*business_id= 
SELECT COUNT(distinct business_id)
FROM tip

ix. User = 10000
SELECT COUNT(distinct id)
FROM user
x. Friend = 11
SELECT COUNT(distinct user_id)
FROM friend

xi. Elite_years = 2780
SELECT COUNT(distinct user_id)
FROM elite_years

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No

SQL code used to arrive at answer:

	Select *
from user
where id is NULL or
name is NULL or 
review_count is NULL or
yelping_since is NULL or
useful is NULL or
funny is NULL or
cool is NULL or
fans is NULL or
compliment_hot is NULL or
compliment_more is NULL or
compliment_profile is NULL or
compliment_cute is NULL or
compliment_list is NULL or
compliment_note is NULL or
compliment_plain is NULL or
compliment_cool is NULL or
compliment_funny is NULL or
compliment_writer is NULL or
compliment_photos is NULL or 
average_stars is NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max: 5		avg: 3.7082
		
Select min(stars)
from review

Select max(stars)
from review

Select avg(stars)
from review

	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549

Select min(stars)
from business

Select max(stars)
from business

Select avg(stars)
from business
		
	
	iii. Table: Tip, Column: Likes
	
		min:0 		max:2		avg: 0.0144
		
Select min(likes)
from tip

Select avg(likes)
from tip

Select max(likes)
from tip

	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414

Select min(count)
from checkin

Select avg(count)
from checkin


Select max(count)
from checkin
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995

Select min(Review_count)
from user

Select max(Review_count)
from user
		
Select avg(Review_count)
from user		



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city,

sum(review_count) AS RC
from business
group by city
order by review_count DESC
	

	Copy and Paste the Result Below:

	+------------------------+-------+
| city                   |    RC |
+------------------------+-------+
| Woodmere Village       |   242 |
| Mount Lebanon          |   138 |
| Charlotte              | 12523 |
| McMurray               |   116 |
| North York             |   998 |
| Enterprise             |    89 |
| Matthews               |   773 |
| Munroe Falls           |    74 |
| Ahwatukee              |   235 |
| Pittsburgh             |  9798 |
| Woodmere               |   104 |
| Tolleson               |   113 |
| Pineville              |   563 |
| Carnegie               |    72 |
| Macedonia              |    71 |
| Markham                |  2352 |
| Whitchurch-Stouffville |    52 |
| Windsor                |    50 |
| Goodyear               |  1155 |
| Gibsonia               |    70 |
| Summerlin              |    44 |
| Peninsula              |    42 |
| Richfield              |    64 |
| Dormont                |    40 |
| nboulder city          |    40 |
+------------------------+-------+
(Output limit exceeded, 25 of 362 total rows shown)



	
6. Find the distribution of star ratings to the business in the following cities:


i. Avon

SQL code used to arrive at answer:
select city,
stars,
sum(review_count) as star_rating_count
from business
where city = 'Avon'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+------+-------+-------------------+
| city | stars | star_rating_count |
+------+-------+-------------------+
| Avon |   1.5 |                10 |
| Avon |   2.5 |                 6 |
| Avon |   3.5 |                88 |
| Avon |   4.0 |                21 |
| Avon |   4.5 |                31 |
| Avon |   5.0 |                 3 |
+------+-------+-------------------+



ii. Beachwood

SQL code used to arrive at answer:

select city,
stars,
sum(review_count) as star_rating_count
from business
where city = 'Beachwood'
group by stars



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-----------+-------+-------------------+
| city      | stars | star_rating_count |
+-----------+-------+-------------------+
| Beachwood |   2.0 |                 8 |
| Beachwood |   2.5 |                 3 |
| Beachwood |   3.0 |                11 |
| Beachwood |   3.5 |                 6 |
| Beachwood |   4.0 |                69 |
| Beachwood |   4.5 |                17 |
| Beachwood |   5.0 |                23 |
+-----------+-------+-------------------+
		



7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

select name,
sum(review_count) as RC
from user
group by id
order by RC desc
limit 3
		
	Copy and Paste the Result Below:

+--------+------+
| name   |   RC |
+--------+------+
| Gerald | 2000 |
| Sara   | 1629 |
| Yuri   | 1339 |
+--------+------+
		


8. Does posing more reviews correlate with more fans?

select name,
sum(fans) as Total_Fans
from user
group by id
order by Total_Fans desc
limit 3

+--------+------------+
| name   | Total_Fans |
+--------+------------+
| Amy    |        503 |
| Mimi   |        497 |
| Harald |        311 |
+--------+------------+

	Please explain your findings and interpretation of the results:
	No, there aren't a correlation between a more review with more fans, because we have that the top 3 of persons with total number of review, it's differente to top three in persons that have more total fans.


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
+----------+-------------+
| feelings | total_count |
+----------+-------------+
| Others   |        8042 |
| love     |        1780 |
| have     |         178 |
+----------+-------------+


	
	SQL code used to arrive at answer:
select
feelings,
count(*) AS total_count
from (select case when text like "%love%" then "love"
when text like "%hate%" then "have"
else "Others" 
end feelings
from review)
group by feelings
order by total_count DESC


	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select name, 
sum(fans) as total_fans
from user
group by id
order by total_fans desc
limit 10


	Copy and Paste the Result Below:
+-----------+------------+
| name      | total_fans |
+-----------+------------+
| Amy       |        503 |
| Mimi      |        497 |
| Harald    |        311 |
| Gerald    |        253 |
| Christine |        173 |
| Lisa      |        159 |
| Cat       |        133 |
| William   |        126 |
| Fran      |        124 |
| Lissa     |        120 |
+-----------+------------+

		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
I choose Toronto and Restaurants like category

But there are not a big diffence in working days between restaurants with 2-3 stars and 4-5 stars, just like 2 days.

sql code:
select case when stars >= 4 then "4-5 stars"
when stars >= 2 then "2-3 stars"
else "below 2"
end star_rank,
city,
c.category,
count(distinct business.id) AS company_count,
count(h.hours) AS working_days
from business
join hours h on business.id = h.business_id
join category c on business.id = c.business_id
where city = "Toronto" and c.category = "Restaurants"
group by star_rank

results:
+-----------+---------+-------------+---------------+--------------+
| star_rank | city    | category    | company_count | working_days |
+-----------+---------+-------------+---------------+--------------+
| 2-3 stars | Toronto | Restaurants |             3 |           21 |
| 4-5 stars | Toronto | Restaurants |             3 |           19 |
+-----------+---------+-------------+---------------+--------------+


ii. Do the two groups you chose to analyze have a different number of reviews?
No, there are no a significative difference just of 83 review between the two groups.

sql code: 
select case when stars >= 4 then "4-5 stars"
when stars >= 2 then "2-3 stars"
else "below 2"
end star_rank,
city,
c.category,
count(distinct business.id) AS company_count,
sum(review_count) AS total_review
from business
join hours h on business.id = h.business_id
join category c on business.id = c.business_id
where city = "Toronto" and c.category = "Restaurants"
group by star_rank

results:

+-----------+---------+-------------+---------------+--------------+
| star_rank | city    | category    | company_count | total_review |
+-----------+---------+-------------+---------------+--------------+
| 2-3 stars | Toronto | Restaurants |             3 |          602 |
| 4-5 stars | Toronto | Restaurants |             3 |          683 |
+-----------+---------+-------------+---------------+--------------+


iii. Are you able to infer anything from the location data provided between these two groups? Explain.

That the restaurants with 2-3 stars and 4-5 stars are located in different places.

sql code:

select case when stars >= 4 then "4-5 stars"
when stars >= 2 then "2-3 stars"
else "below 2"
end star_rank,
city,
address,
neighborhood,
postal_code
from business
join category c on business.id = c.business_id
where city = "Toronto" and c.category = "Restaurants"
group by star_rank

resultados:
+-----------+---------+-------------------------+--------------+-------------+
| star_rank | city    | address                 | neighborhood | postal_code |
+-----------+---------+-------------------------+--------------+-------------+
| 2-3 stars | Toronto | 3003 Bathurst Street    |              | M6B         |
| 4-5 stars | Toronto | 169 Niagara Street      | Niagara      | M5V         |
| below 2   | Toronto | 5 Northtown Way, Unit 7 | Willowdale   | M2N 7A1     |
+-----------+---------+-------------------------+--------------+-------------+

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

		
i. Difference 1: There area a significative difference in total review when a company is open or close.
         
         
ii. Difference 2: There are not a significative difference between the average star are very closed 3.68 and 3.52. it means that the companies not are only close or open due to a poor quality in services.

SQL code used for analysis:

SELECT CASE  WHEN is_open = 1 THEN "OPEN"
WHEN is_open = 0 THEN "CLOSED"
END status, 
count(distinct id) AS num_company,
sum(review_count) AS total_review,
round(avg(review_count),2) AS avg_review,
round(avg(stars),2) AS avg_stars
FROM business
GROUP BY is_open
ORDER BY status DESC

+--------+-------------+--------------+------------+-----------+
| status | num_company | total_review | avg_review | avg_stars |
+--------+-------------+--------------+------------+-----------+
| OPEN   |        8480 |       269300 |      31.76 |      3.68 |
| CLOSED |        1520 |        35261 |       23.2 |      3.52 |
+--------+-------------+--------------+------------+-----------+

	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
The analysis that I will do is about what is the most successful businesses base on Las Vegas city.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For my analysis I need to know the categories, num. de companies, Avg-stars, and reviews, of My city "Las Vegas". Because I want to know what is the most successful company in this city, so I think the all those elements can determinated if a company is successfull or not.

iii. Output of your finished dataset:
+------------------+-----------+---------------------------+--------------+---------------+-----------+---------------+
| category         | city      | address                   | neighborhood | num_companies | avg_stars | total_reviews |
+------------------+-----------+---------------------------+--------------+---------------+-----------+---------------+
| Doctors          | Las Vegas | 2779 W Horizon Ridge Pkwy | Anthem       |             2 |       4.5 |            21 |
| Health & Medical | Las Vegas | 2779 W Horizon Ridge Pkwy | Anthem       |             4 |       4.5 |            36 |
| Home Services    | Las Vegas | 7350 W Centennial Pkwy    | Centennial   |             2 |       4.5 |            13 |
| Hotels & Travel  | Las Vegas | 1000 Scenic Loop Dr       |              |             2 |       4.0 |            51 |
+------------------+-----------+---------------------------+--------------+---------------+-----------+---------------+


iv. Provide the SQL code you used to create your final dataset:

SELECT  category, 
        city,
        address,
        neighborhood,
        count(distinct id) AS num_companies, 
        round(avg(stars),2) AS avg_stars,
        sum(review_count) total_reviews
FROM business
JOIN category ON business.id = category.business_id
where city = "Las Vegas"
GROUP BY category
HAVING avg_stars >= 4 AND num_companies >= 2
ORDER BY avg_stars DESC
